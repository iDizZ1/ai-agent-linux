# interactive.py - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º

import logging
from colorama import Fore, Style, init
from llm_client import generate_command
from executor import run_command, is_dangerous_command, categorize_command, CommandCategory

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
init(autoreset=True)

logger = logging.getLogger(__name__)

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ (–±–µ–∑ –ë–î)
session_history = []

def interactive_loop():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX (–≠–¢–ê–ü 2.3)"""
    logger.info("–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞")
    
    print(f"{Fore.CYAN}ü§ñ –ó–∞–ø—É—â–µ–Ω –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    print(f"{Fore.YELLOW}üí¨ –í–≤–µ–¥–∏—Ç–µ 'exit' –∏–ª–∏ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print(f"{Fore.YELLOW}üìù –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏")
    print(f"{Fore.YELLOW}üìä –í–≤–µ–¥–∏—Ç–µ 'history' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏")
    print("-" * 50)
    
    while True:
        try:
            prompt = input(f"{Fore.GREEN}AIask> {Style.RESET_ALL}").strip()
            
            if prompt.lower() in ("exit", "quit", "q"):
                logger.info("–í—ã—Ö–æ–¥ –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞")
                print(f"{Fore.CYAN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
            if prompt.lower() == "help":
                show_help()
                continue
                
            if prompt.lower() == "history":
                show_session_history()
                continue
                
            if prompt.lower() == "clear":
                import os
                os.system('clear' if os.name != 'nt' else 'cls')
                continue
                
            if not prompt:
                continue
                
            logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {prompt}")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
            resp = generate_command(prompt)
            cmd, expl = resp["command"], resp.get("explanation", "")
            
            if not cmd:
                print(f"{Fore.RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å.")
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –î–û –≤—ã–≤–æ–¥–∞ 
            if is_dangerous_command(cmd):
                print(f"{Fore.RED}üö® –û–ü–ê–°–ù–ê–Ø –ö–û–ú–ê–ù–î–ê –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ê!")
                print(f"{Fore.YELLOW}–ö–æ–º–∞–Ω–¥–∞: {cmd}")
                print(f"{Fore.RED}‚õî –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –Ω–∞–Ω–µ—Å—Ç–∏ —Å–µ—Ä—å–µ–∑–Ω—ã–π –≤—Ä–µ–¥ —Å–∏—Å—Ç–µ–º–µ.")
                logger.warning(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –æ–ø–∞—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {cmd}")
                session_history.append({"query": prompt, "command": cmd, "status": "BLOCKED"})
                continue
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–º–∞–Ω–¥—ã 
            category = categorize_command(cmd)
            category_icon = {
                CommandCategory.SAFE: f"{Fore.GREEN}‚úì",
                CommandCategory.WRITE: f"{Fore.YELLOW}‚úé",
                CommandCategory.DANGEROUS: f"{Fore.MAGENTA}‚ö†",
                CommandCategory.CRITICAL: f"{Fore.RED}‚õî"
            }
            
            print(f"{Fore.CYAN}ü§ñ –ö–æ–º–∞–Ω–¥–∞: {Fore.WHITE}{cmd} {category_icon.get(category, '')}")
            if expl:
                print(f"{Fore.BLUE}üí° –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: {expl}")
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            confirm = input(f"{Fore.YELLOW}–í—ã–ø–æ–ª–Ω–∏—Ç—å? [y/N]: {Style.RESET_ALL}").strip().lower()
            
            if confirm in ('y', 'yes', '–¥–∞'):
                logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
                code, out, err = run_command(cmd)
                
                if code == 0:
                    print(f"{Fore.GREEN}‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    if out.strip():
                        print(f"{Style.RESET_ALL}{out}")
                    session_history.append({"query": prompt, "command": cmd, "status": "SUCCESS"})
                else:
                    if "–ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏" in err.lower() or "timeout" in err.lower():
                        print(f"{Fore.YELLOW}‚è±Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –≤–æ–≤—Ä–µ–º—è (timeout)")
                    else:
                        print(f"{Fore.RED}‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–∫–æ–¥ {code})")
                    if err.strip():
                        print(f"{Fore.RED}–î–µ—Ç–∞–ª–∏: {err}")
                    session_history.append({"query": prompt, "command": cmd, "status": "ERROR"})
            else:
                logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
                print(f"{Fore.YELLOW}‚è≠Ô∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ")
                session_history.append({"query": prompt, "command": cmd, "status": "CANCELLED"})
                
        except KeyboardInterrupt:
            logger.info("–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Ctrl+C")
            print(f"\n{Fore.CYAN}üëã –í—ã—Ö–æ–¥ –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é...")
            break
            
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ: {e}")
            print(f"{Fore.RED}‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            print(f"{Fore.YELLOW}üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É...")

def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º """
    help_text = f"""
{Fore.CYAN}{'=' * 60}
üÜò –°–ü–†–ê–í–ö–ê –ü–û AI-–ê–°–°–ò–°–¢–ï–ù–¢–£
{'=' * 60}{Style.RESET_ALL}

{Fore.GREEN}üìå –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:{Style.RESET_ALL}
  ‚Ä¢ –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
  ‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã:
    - "—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É test"
    - "–ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã"
    - "–Ω–∞–π—Ç–∏ —Ñ–∞–π–ª—ã .txt"
    - "–ø–æ—Å—á–∏—Ç–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–∞–π–ª–µ"

{Fore.YELLOW}üîß –°–õ–£–ñ–ï–ë–ù–´–ï –ö–û–ú–ê–ù–î–´:{Style.RESET_ALL}
  ‚Ä¢ {Fore.CYAN}help{Style.RESET_ALL}    - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  ‚Ä¢ {Fore.CYAN}history{Style.RESET_ALL} - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
  ‚Ä¢ {Fore.CYAN}clear{Style.RESET_ALL}   - –æ—á–∏—Å—Ç–∏—Ç—å —ç–∫—Ä–∞–Ω
  ‚Ä¢ {Fore.CYAN}exit{Style.RESET_ALL}    - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã (—Ç–∞–∫–∂–µ: quit, q)
  ‚Ä¢ {Fore.CYAN}Ctrl+C{Style.RESET_ALL}  - —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥

{Fore.RED}‚ö†Ô∏è  –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:{Style.RESET_ALL}
  ‚Ä¢ –û–ø–∞—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã {Fore.RED}–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è{Style.RESET_ALL}
  ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç {Fore.RED}–î–û{Style.RESET_ALL} –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥:
    {Fore.GREEN}‚úì{Style.RESET_ALL} –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ (read-only)
    {Fore.YELLOW}‚úé{Style.RESET_ALL} –ò–∑–º–µ–Ω—è—é—â–∏–µ —Ñ–∞–π–ª—ã
    {Fore.MAGENTA}‚ö†{Style.RESET_ALL} –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ
    {Fore.RED}‚õî{Style.RESET_ALL} –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –æ–ø–∞—Å–Ω—ã–µ (–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è)

{Fore.BLUE}üí° –°–û–í–ï–¢–´:{Style.RESET_ALL}
  ‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏
  ‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ –∏ –ø—É—Ç–µ–π
  ‚Ä¢ –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å
  ‚Ä¢ –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º

{Fore.MAGENTA}üìä –õ–û–ì–ò–†–û–í–ê–ù–ò–ï:{Style.RESET_ALL}
  ‚Ä¢ –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ {Fore.CYAN}logs/aiask.log{Style.RESET_ALL}
  ‚Ä¢ –û–ø–∞—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å —É—Ä–æ–≤–Ω–µ–º WARNING
  ‚Ä¢ –û—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–ª–Ω—ã–º traceback

{Fore.CYAN}{'=' * 60}{Style.RESET_ALL}
"""
    print(help_text)

def show_session_history():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∫–æ–º–∞–Ω–¥ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ (–≠–¢–ê–ü 2.3)"""
    if not session_history:
        print(f"{Fore.YELLOW}üì≠ –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞")
        return
    
    print(f"\n{Fore.CYAN}{'=' * 60}")
    print(f"üìú –ò–°–¢–û–†–ò–Ø –¢–ï–ö–£–©–ï–ô –°–ï–°–°–ò–ò ({len(session_history)} –∫–æ–º–∞–Ω–¥)")
    print(f"{'=' * 60}{Style.RESET_ALL}\n")
    
    for i, entry in enumerate(session_history, 1):
        status_icon = {
            "SUCCESS": f"{Fore.GREEN}‚úÖ",
            "ERROR": f"{Fore.RED}‚ùå",
            "BLOCKED": f"{Fore.RED}üö®",
            "CANCELLED": f"{Fore.YELLOW}‚è≠Ô∏è"
        }
        icon = status_icon.get(entry["status"], "")
        
        print(f"{icon} {Fore.WHITE}[{i}]{Style.RESET_ALL} {Fore.CYAN}{entry['query']}{Style.RESET_ALL}")
        print(f"    ‚Üí {Fore.YELLOW}{entry['command']}{Style.RESET_ALL}")
        print(f"    [{entry['status']}]\n")
    
    print(f"{Fore.CYAN}{'=' * 60}{Style.RESET_ALL}\n")